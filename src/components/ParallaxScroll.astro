---
// 视差滚动组件
---

<div class="parallax-container">
  <!-- 背景层 -->
  <div class="parallax-bg" id="parallax-bg"></div>
  
  <!-- 内容层 -->
  <div class="parallax-content">
    <slot />
  </div>
</div>

<style>
  .parallax-container {
    position: relative;
    overflow: hidden;
    min-height: 100vh;
  }

  .parallax-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 120%;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
    background-size: 400% 400%;
    animation: gradientShift 20s ease infinite;
    z-index: -2;
    transform: translateZ(0);
  }

  .parallax-content {
    position: relative;
    z-index: 1;
  }

  @keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  /* 视差层 */
  .parallax-layer {
    position: absolute;
    width: 100%;
    height: 100%;
    will-change: transform;
  }

  .parallax-layer-1 {
    background: radial-gradient(circle at 20% 80%, rgba(255, 107, 107, 0.3) 0%, transparent 50%);
    animation: float 6s ease-in-out infinite;
  }

  .parallax-layer-2 {
    background: radial-gradient(circle at 80% 20%, rgba(78, 205, 196, 0.3) 0%, transparent 50%);
    animation: float 8s ease-in-out infinite reverse;
  }

  .parallax-layer-3 {
    background: radial-gradient(circle at 40% 40%, rgba(69, 183, 209, 0.2) 0%, transparent 50%);
    animation: float 10s ease-in-out infinite;
  }

  /* 滚动视差效果 */
  .parallax-slow {
    transform: translateY(var(--scroll-slow));
  }

  .parallax-fast {
    transform: translateY(var(--scroll-fast));
  }

  .parallax-reverse {
    transform: translateY(calc(var(--scroll-reverse) * -1));
  }

  /* 响应式优化 */
  @media (max-width: 768px) {
    .parallax-bg {
      height: 150%;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .parallax-bg,
    .parallax-layer-1,
    .parallax-layer-2,
    .parallax-layer-3 {
      animation: none;
    }
  }
</style>

<script>
  function initParallax() {
    const bg = document.getElementById('parallax-bg');
    const layers = document.querySelectorAll('.parallax-layer');
    
    let ticking = false;

    function updateParallax() {
      const scrolled = window.pageYOffset;
      const rate = scrolled * -0.5;
      const rate2 = scrolled * -0.3;
      const rate3 = scrolled * -0.7;

      if (bg) {
        bg.style.transform = `translateY(${rate}px)`;
      }

      layers.forEach((layer, index) => {
        const speed = (index + 1) * 0.1;
        layer.style.transform = `translateY(${scrolled * speed}px)`;
      });

      // 更新CSS变量
      document.documentElement.style.setProperty('--scroll-slow', `${scrolled * 0.3}px`);
      document.documentElement.style.setProperty('--scroll-fast', `${scrolled * 0.7}px`);
      document.documentElement.style.setProperty('--scroll-reverse', `${scrolled * 0.5}px`);

      ticking = false;
    }

    function requestTick() {
      if (!ticking) {
        requestAnimationFrame(updateParallax);
        ticking = true;
      }
    }

    window.addEventListener('scroll', requestTick, { passive: true });
    
    // 初始调用
    updateParallax();
  }

  // 页面加载完成后初始化
  document.addEventListener('DOMContentLoaded', initParallax);
</script>
